[_substitutions]
projectRoot=/Users/tqwhite/Documents/webdev/docStore/docServer/system/
projectName=docStoreServer
tmpDirPath=/tmp
fileStorageBasePath=/tmp/docStore
;<!userHomeDir!> is injected by call to configFileProcessor()
pluginDirectory=/Users/tqwhite/Documents/webdev/docStore/docServer/system/configs/instanceSpecific/qbook/doc-server-plugins
applicationSupportDir=<!userHomeDir!>/Library/Application Support/DocServer
privilegedBrowserCookieName=donutCookie

[SYSTEM]
;these parameters are often used in multiple places in the system
port=3000
uploadTempDirectory=<!fileStorageBasePath!>/expressTempFiles
dynamicUrlLength=22
showDebuggingInfoInLog=true

applicationSupportDir=<!applicationSupportDir!>
tmpDir=<!tmpDirPath!>

[endpoint-service]
placeholder=unused

[token-management-database]
tokenAccountDbName=tokenAndAccountManagementDatabase
tokenTableName=tokenManagement

[file-storage]

storageEngineName=local-file-system
local-file-system.storageDirectoryPath=<!fileStorageBasePath!>/documents
local-file-system.setReadOnly=false

;Each indexing agent must be specified in [indexing-agents] and must have a matching config entry

[audit-log]
;this is built in and always invoked
description=sqlite database containing all transactions against files

[local-index]
;this is built in and always invoked
logDirectoryPath=<!fileStorageBasePath!>/localIndex/
description=alternative, local indexing agent


[indexing-agents]
;note: This list is for opptional agents. audit-log and local-index are built in and should not be listed.
agentList.0=<!pluginDirectory!>/indexing-agents/helix-standard

[helix-standard]
logDirectoryPath=<!fileStorageBasePath!>/barsonHelix/
hxConnectorUrl=http://genericwhite.com/ping
description=Report activity to Helix

[database-persistance]
databaseContainerDirPath=<!applicationSupportDir!>/databases
databaseTypeName=sqlite-instance

[key-account-encryption]
placeholder=true


;web pages elements
[request-initiator]
pageTitle=Generate Transfer Request File
privilegedBrowserCookieName=<!privilegedBrowserCookieName!>

[get-privileged-token]
allowedStaticDevEndpoint=getPrivilegedToken
pageTitle=Privileged Token Generator
privilegedBrowserCookieName=<!privilegedBrowserCookieName!>

[token-services]
tokenExpirationDays=10